---
- hosts: jenkins-server
  remote_user: ec2-user
  become: yes
  vars: 
    dir_name: jenkins_home

    users_to_add: 
      - ec2-user
      - jenkins
  tasks:
    - name: Update yum cache
      yum:
        update_cache: yes

    - name: Install docker
      yum:
        name: docker
        state: latest
    
    - name: Start docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add users to docker group
      user:
        name: "{{ item }}"
        groups: docker
        append: yes
      loop: "{{ users_to_add }}"

    - name: Create Jenkins home directory
      file:
        path: "{{ dir_name }}"
        state: directory

    - name: run jenkins container
      shell: |
        chmod 777 /home/ec2-user/jenkins_home
        docker run -d -p 8080:8080 \
        -v /home/ec2-user/jenkins_home/:/var/jenkins_home/ \
        -v /var/run/docker.sock:/var/run/docker.sock \
        --name jenkins-container \
        jenkins/jenkins:lts 

    - name: Install wget in Jenkins container as root
      shell: 
        docker exec --user root jenkins-container bash -c "apt-get update && apt-get install -y wget"
    - name: Install Docker client in Jenkins container as root
      shell: 
        docker exec --user root jenkins-container bash -c "wget https://get.docker.com -O /tmp/installdocker.sh && chmod +x /tmp/installdocker.sh && bash /tmp/installdocker.sh"

    - name: configure docker with jenkins
      shell:
        " chmod 666 /var/run/docker.sock "
    - name: Install ansible in Jenkins container as root
      shell: 
        docker exec --user root jenkins-container bash -c "apt-get install -y ansible"
    
    - name: Install maven in Jenkins container as root
      shell: 
        docker exec --user root jenkins-container bash -c "apt-get install -y maven"
    
- hosts: web-server
  remote_user: ec2-user
  become: yes
  tasks:
    - name: Update yum cache
      apt:
        update_cache: yes

    - name: Install docker
      apt:
        name: docker
        state: latest
    
    - name: Start docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: add user
      shell: 
        " usermod -aG docker ec2-user"

    - name: Download Docker Compose
      get_url:
        url: "https://github.com/docker/compose/releases/download/v2.29.6/docker-compose-linux-x86_64"
        dest: /usr/local/bin/docker-compose
        mode: '0777'

    # Prometheus and Node Exporter Setup
    - name: Create directory for Prometheus setup
      file:
        path: /opt/prometheus
        state: directory

    - name: Copy Prometheus configuration file from local workspace
      copy:
        src: ../prometheus/prometheus.yaml  # Relative path in Jenkins workspace
        dest: /opt/prometheus/prometheus.yaml

    - name: Copy Docker Compose file for Prometheus from local workspace
      copy:
        src: ../prometheus/docker-compose.yaml  # Relative path in Jenkins workspace
        dest: /opt/prometheus/docker-compose.yaml

    - name: stop prometheus using Docker Compose
      command: docker-compose down --remove-orphans
      args:
        chdir: /opt/prometheus       

    - name: Start Prometheus and Node Exporter using Docker Compose
      command: docker-compose up -d
      args:
        chdir: /opt/prometheus

    - name: Check if Prometheus is running
      wait_for:
        port: 9090
        delay: 10
        timeout: 60

    - name: Check if Node Exporter is running
      wait_for:
        port: 9100
        delay: 10
        timeout: 60        
